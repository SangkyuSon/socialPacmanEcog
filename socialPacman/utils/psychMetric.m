function out = psychMetric(x,y,varargin)
% bestsol = psychMetric(x,y,varargin)
%options = struct('lb',         [min(x),0],...
%    'ub',         [max(x),max(x)*5],...
%    'init',       [median(x),mad(x)],...
%    'MaxIter',    1e2,...
%    'MaxFunEvals',1e2,...
%    'TolFun',     1e-8,...
%    'FunEvalNo',  3,...
%    'Display',    'off',...
%    'Mode',       'cumulGauss'
%    'fitx',        linspace(min(x),max(x),100));

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 
options = struct('lb',         [min(x),0],...
    'ub',         [max(x),max(x)*5],...
    'init',       [median(x),mad(x)],...
    'MaxIter',    1e3,...
    'MaxFunEvals',1e3,...
    'TolFun',     1e-15,...
    'FunEvalNo',  3,...
    'Display',    'off',...
    'Mode',       'cumulGauss',...
    'fitx',       linspace(min(x),max(x),100),...
    'findy',        0.75);
options = checkOptions(options,varargin{:});

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 
if strcmp(options.Mode,'cumulGauss')
    fun = @(params,X) normcdf(X, params(1), params(2));
    lsef = @(params) norm(y - fun(params,x));
end

evalopt = saoptimset('MaxIter',options.MaxIter,'MaxFunEvals',options.MaxFunEvals,'TolFun',options.TolFun,'Display',options.Display);

for t = 1:options.FunEvalNo,
    [sol(t,:),fval(t)] = simulannealbnd(@(params) lsef(params), options.init*rand*0.1, options.lb, options.ub);
end
[~,minIdx] = min(fval);
out.sol = sol(minIdx,:);
out.fitx   = options.fitx;
out.fity   = fun(out.sol,options.fitx);
out.x      = x;
out.y      = y;
[~,pseIdx] = min(abs(out.y-0.75));
out.pse = out.x(pseIdx);
[~,findyIdx] = min(abs(out.y-options.findy));
out.findy = out.x(findyIdx);

end